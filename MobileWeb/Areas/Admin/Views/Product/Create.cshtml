@model Model.EF.Product

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layouts.cshtml";
}

@section header{
    Thêm mới sản phẩm
}


@*@section jsFooter{
        <script>
            $('#btnSelectImage').on('click', function (e) {
                e.preventDefault();
                var finder = new CKFinder();
                finder.selectActionFunction = function (url) {
                    $('#txtImage').val(url);
                };
                finder.popup();
            })

            var editor = CKEDITOR.replace('txtProduct', {
                customConfig: '/Content/admin/js/plugins/ckeditor/config.js',
            });
        </script>
    }*@
@using (Html.BeginForm("Create", "Product", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{

    <div class="form-horizontal">
        <h4>Sản Phẩm</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.AntiForgeryToken()

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-20">
                @Html.TextBoxFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MetaTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-20">
                @Html.TextBoxFor(model => model.MetaTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MetaTitle, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @*@@Html.TextBoxFor(model => model.Image, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.Image), type = "file", @name = "fileUpload", @id = "txtImage" }, id = "txtImage" })
                            Browse…@<a id="btnSelectImage" href="#">Chọn ảnh</a>
                    @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })*@

                @*Name của thẻ input file phải trùng tên với tham số bên controller*@
                @*@Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control", @type = "file", @name = "fileUpload"} })*@
                <input id="Image" title="Upload a product image" type="file" name="fileUpload">
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-20">
                @Html.TextBoxFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PromotionPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-20">
                @Html.TextBoxFor(model => model.PromotionPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PromotionPrice, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-20">
                @Html.DropDownListFor(model => model.CategoryID, null, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Warranty, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-20">
                @Html.TextBoxFor(model => model.Warranty, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Warranty, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-20">
                @Html.TextBoxFor(model => model.Size, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Memory, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-20">
                @Html.TextBoxFor(model => model.Memory, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Memory, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-20">
                @Html.TextBoxFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-20">
                @Html.TextBoxFor(model => model.Color, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Chip, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-20">
                @Html.TextBoxFor(model => model.Chip, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Chip, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CPU, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-20">
                @Html.TextBoxFor(model => model.CPU, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CPU, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OS, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-20">
                @Html.TextBoxFor(model => model.OS, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OS, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ram, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-20">
                @Html.TextBoxFor(model => model.Ram, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ram, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Battery, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-20">
                @Html.TextBoxFor(model => model.Battery, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Battery, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Screen, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-20">
                @Html.TextBoxFor(model => model.Screen, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Screen, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FontCamera, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-20">
                @Html.TextBoxFor(model => model.FontCamera, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FontCamera, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RearCameraNo1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-20">
                @Html.TextBoxFor(model => model.RearCameraNo1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RearCameraNo1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RearCameraNo2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-20">
                @Html.TextBoxFor(model => model.RearCameraNo2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RearCameraNo2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sim, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-20">
                @Html.TextBoxFor(model => model.Sim, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Sim, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Connect, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-20">
                @Html.TextBoxFor(model => model.Connect, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Connect, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SpecialFeatures, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-20">
                @Html.TextBoxFor(model => model.SpecialFeatures, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SpecialFeatures, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.TopHot, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-20">
                @Html.EditorFor(model => model.TopHot, "{0:dd-MM-yyyy}", new { htmlAttributes = new { @class = "" } })
                @Html.ValidationMessageFor(model => model.TopHot, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-20">
                @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" }@*, id = "txtProduct"*@})
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-20">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>

}
 </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
